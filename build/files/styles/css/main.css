/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}h1{font-size:2em;margin:0.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace, monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0}input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button{height:auto}input[type="search"]{-webkit-appearance:textfield;box-sizing:content-box}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:bold}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}[kk-debug] *{background:none !important;outline:1px dashed rgba(100,0,0,0.5) !important}[kk-flex]{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}[kk-flex~="inline"]{display:-webkit-inline-box;display:-webkit-inline-flex;display:-ms-inline-flexbox;display:inline-flex}[kk-flex],[kk-flex~="row"]{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}[kk-flex~="row:reverse"]{-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-webkit-flex-direction:row-reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}[kk-flex~="col"]{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}[kk-flex~="col:reverse"]{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-webkit-flex-direction:column-reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}[kk-flex~="wrap"],[kk-flex~="wrap:nowrap"]{-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}[kk-flex~="wrap:wrap"]{-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}[kk-flex~="wrap:reverse"]{-webkit-flex-wrap:wrap-reverse;-ms-flex-wrap:wrap-reverse;flex-wrap:wrap-reverse}[kk-flex~="justify"],[kk-flex~="justify:start"]{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[kk-flex~="justify:end"]{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[kk-flex~="justify:center"]{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[kk-flex~="justify:between"]{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}[kk-flex~="justify:around"]{-webkit-justify-content:space-around;-ms-flex-pack:distribute;justify-content:space-around}[kk-flex~="align:items"],[kk-flex~="align:items:stretch"]{-webkit-box-align:stretch;-webkit-align-items:stretch;-ms-flex-align:stretch;align-items:stretch}[kk-flex~="align:items:start"]{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[kk-flex~="align:items:end"]{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[kk-flex~="align:items:center"]{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}[kk-flex~="align:items:baseline"]{-webkit-box-align:baseline;-webkit-align-items:baseline;-ms-flex-align:baseline;align-items:baseline}[kk-flex~="align:content"],[kk-flex~="align:content:stretch"]{-webkit-align-content:stretch;-ms-flex-line-pack:stretch;align-content:stretch}[kk-flex~="align:content:start"]{-webkit-align-content:flex-start;-ms-flex-line-pack:start;align-content:flex-start}[kk-flex~="align:content:end"]{-webkit-align-content:flex-end;-ms-flex-line-pack:end;align-content:flex-end}[kk-flex~="align:content:center"]{-webkit-align-content:center;-ms-flex-line-pack:center;align-content:center}[kk-flex~="align:content:between"]{-webkit-align-content:space-between;-ms-flex-line-pack:justify;align-content:space-between}[kk-flex~="align:content:araound"]{-webkit-align-content:space-around;-ms-flex-line-pack:distribute;align-content:space-around}*{-webkit-tap-highlight-color:transparent;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;outline:0}*,*::before,*::after{box-sizing:border-box}html{height:100%}body{min-height:100%}html,body{overflow:hidden}h3{font-size:10vmin;color:white}[kk-type~="head"]{color:#fff;letter-spacing:.05em;text-shadow:0 0 0.1em #000,0 0 0.1em #000,0 0 0.1em #000,0 0 0.1em #000,0 0 0.1em #000,0 0 0.1em #000,0 0 0.1em #000,0 0 0.1em #000,0 0 0.1em #000,0 0 0.1em #000,0 0 0.1em #000}

/*# sourceMappingURL=data:application/json;base64, */